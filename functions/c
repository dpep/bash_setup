# Make movement easier, eg.
# `c path/to/dir/like/normal/cd`
# `c path/to/file/also/work`
# `c [`  # cd a separate shell into the same dir
# `c -`  # go back to the last dir you were in, like `cd -` or `popd`


function c() {
  local dir="$1"
  local history_file=~/.cd_history

  if [[ $dir == "[" || $dir == "]" ]]; then
    # go to current working dir
    cd $(tail -n1 $history_file) || exit
  elif [[ $dir == '-' ]]; then
    # go back to last visited dir
    cd $(tail -n2 $history_file | head -n1) || exit
  elif [ -f "$dir" ]; then
    # specified a file, go to the containing directory
    cd $(dirname "$dir") || exit
  elif [ -z "$dir" ]; then
    # no argument
    cd || exit
  else
    cd "$dir" || exit
  fi

  CWD=$(pwd)

  if [ -n "$HISTSIZE" ]; then
    # update and truncate history file
    if [[ "$CWD" != $(tail -n1 $history_file) ]]; then
      # not a duplicate
      echo "$CWD" >> "$history_file"
    fi

    local line_count=$(wc -l < $history_file)
    while [[ "$line_count" -gt $HISTSIZE ]]; do
      # remove first entry (FIFO)
      sed -i "" "1 d" $history_file
      line_count=$((line_count - 1))
    done
  fi

  ls
}


# autocomplete with available directories, respecting filter
complete -d -X "*@($(echo "$DIGNORE" | tr ':' '|'))" -o default c
